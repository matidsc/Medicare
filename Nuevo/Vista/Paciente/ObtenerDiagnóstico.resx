<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WFz4H0rNEPhG91ROAAAAAElFTkSuQmCC
</value>
  </data>
</root>